/**
 * Margin, No Edge
 * Removes left margin from first item, right margin from last item
 */
@mixin margin-no-edge( $margin ) {
  margin: $margin;

  &:first-child {
    margin-left: 0;
  }

  &:last-child {
    margin-right: 0;
  }

}

/**
 * Icon Position
 *
 */
@mixin icon-position( $icon_size, $container_size ) {
	margin-top: calc( ( #{$container_size} - #{$icon_size} ) / 2 );
	width: $icon_size;
	height: $icon_size;
}

/**
 * Center Image
 *
 */
@mixin center-image() {
	display: grid;
	align-items: center;
	grid-template-columns: 1;
	grid-template-rows: 1;

	img {
		grid-column: 1 / -1;
		grid-row: 1 / -1;
		width: 100%;
		height: 100%;
		object-fit: cover;
	}
}

/**
 * Block Cover
 * Creates a block that covers the full width/height of parent div. Typically used on a :before pseudo element
 */
@mixin block-cover() {
  content: '';
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1;
}

/**
 * Placeholder Color
 *
 */
@mixin placeholder-color( $color ) {

  ::-moz-placeholder {
  	color: $color;
  	opacity: 1;
  }

  ::-ms-input-placeholder {
  	color: $color;
  }

  ::-webkit-input-placeholder {
  	color: $color;
  }

  input:focus::-webkit-input-placeholder,
  input:focus::-moz-placeholder,
  input:focus:-ms-input-placeholder,
  textarea:focus::-webkit-input-placeholder,
  textarea:focus::-moz-placeholder,
  textarea:focus:-ms-input-placeholder {
  	color:transparent;
  }

}

/**
 * Clearfix
 *
 */
@mixin clearfix() {
	&:after {
		content: "";
		display: table;
		clear: both;
	}
}

/**
 * Font Sizes
 *
**/
@mixin font-sizes( $base: null, $tablet: null, $medium: null, $large: null ) {

    @if ( $base ) {
        font-size: $base;
    }

    @if( $tablet ) {
        @include media(">=tablet") {
            font-size: $tablet;
        }
    }

    @if( $medium ) {
        @include media(">=medium") {
            font-size: $medium;
        }
    }

    @if( $large ) {
        @include media(">=desktop") {
            font-size: $large;
        }
    }

}

/**
 * Columns
 *
 */
@mixin columns( $columns, $wrapper_width: null, $grid_item_element: article ) {

  @if( $wrapper_width == null ) {
    $wrapper_width: $grid-max-width;
  }

  .#{$grid_item_element} {
    float: left;
    margin-left: $grid-gutter / $wrapper_width * 100%;
    width: ( ( $wrapper_width - $grid-gutter * ( $columns - 1 ) ) / $columns ) / $wrapper_width * 100%;

    &:nth-of-type(#{$columns}n+1) {
      clear: both;
      margin-left: 0;
    }
  }

  @supports( display: grid ) {
    display: grid;
    grid-column-gap: $grid-gutter;
    grid-template-columns: repeat( $columns, 1fr );

    .#{$grid_item_element} {
      margin-left: 0;
      width: 100%;
    }

    header, nav, footer {
      grid-column: 1 / -1;
    }
  }
}

/**
 * Columns, Mobile
 *
 */
@mixin columns-mobile( $columns, $wrapper_width: null, $grid_item_element: article ) {

  @include media("<tablet") {
    @include columns( $columns, $wrapper_width, $grid_item_element );
  }
}

/**
 * Columns, Tablet
 *
 */
@mixin columns-tablet( $columns, $wrapper_width: null, $grid_item_element: article ) {

  @include media(">=tablet", "<medium") {
    @include columns( $columns, $wrapper_width, $grid_item_element );
  }

}

/**
 * Columns, Tablet Up
 *
 */
@mixin columns-tablet-up( $columns, $wrapper_width: null, $grid_item_element: article ) {

  @include media(">=tablet") {
    @include columns( $columns, $wrapper_width, $grid_item_element );
  }

}

/**
 * Columns, Desktop
 *
 */
@mixin columns-desktop( $columns, $wrapper_width: null, $grid_item_element: article ) {
  @include media(">=medium") {
    @include columns( $columns, $wrapper_width, $grid_item_element );
  }
}
